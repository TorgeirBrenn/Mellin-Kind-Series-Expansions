%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function Mn = Mprimepoly(n, a1, a2, x) returns the n-th M prime polynomial
%with coefficients a1, a2 evaluated at the points in the vector x. To
%account for scale b, replace input x with b*x.
%
%INPUT
%N  : Order of the M prime polynomial.
%a1 : First coefficient of the M prime polynomial. 
%a2 : First coefficient of the M prime polynomial. 
%x  : Points at which the M prime polynomial should be evaluated.
%
%OUTPUT
%Mn : The functional value of the M prime polynomial.
%
%Last update: 2017-04-08
%Made by Torgeir Brenn
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function Mn = Mprimepoly(N, a1, a2, u)

    switch N
        case 0
            Mn = ones(size(u));
        case 1
            Mn = (a1 + a2)*u - a1;
        case 2
            Mn = (a1^2 + 2*a1*a2 + a1 + a2^2 + a2)*u.^2 + ...
                (- a1 - a2 - 2*a1*a2 - 2*a1^2)*u + a1^2;
        case 3
            Mn = (a1^3 + 3*a1^2*a2 + 3*a1^2 + 3*a1*a2^2 + 6*a1*a2 + 2*a1 + a2^3 + 3*a2^2 + 2*a2)*u.^3 ...
                + (- 3*a1^3 - 6*a1^2*a2 - 6*a1^2 - 3*a1*a2^2 - 9*a1*a2 - 3*a1 - 3*a2^2 - 3*a2)*u.^2 ...
                + (a1 + a2 + 3*a1*a2 + 3*a1^2*a2 + 3*a1^2 + 3*a1^3)*u - a1^3;
        case 4
            Mn = (a1^4 + 4*a1^3*a2 + 6*a1^3 + 6*a1^2*a2^2 + 18*a1^2*a2 + 11*a1^2 + 4*a1*a2^3 + 18*a1*a2^2 + 22*a1*a2 + 6*a1 + a2^4 + 6*a2^3 + 11*a2^2 + 6*a2)*u.^4 ...
                + (- 4*a1^4 - 12*a1^3*a2 - 18*a1^3 - 12*a1^2*a2^2 - 42*a1^2*a2 - 26*a1^2 - 4*a1*a2^3 - 30*a1*a2^2 - 44*a1*a2 - 12*a1 - 6*a2^3 - 18*a2^2 - 12*a2)*u.^3 ...
                + (6*a1^4 + 12*a1^3*a2 + 18*a1^3 + 6*a1^2*a2^2 + 30*a1^2*a2 + 19*a1^2 + 12*a1*a2^2 + 26*a1*a2 + 7*a1 + 7*a2^2 + 7*a2)*u.^2 ...
                + (- a1 - a2 - 4*a1*a2 - 6*a1^2*a2 - 4*a1^3*a2 - 4*a1^2 - 6*a1^3 - 4*a1^4)*u + a1^4;
        case 5
            Mn = (a1^5 + 5*a1^4*a2 + 10*a1^4 + 10*a1^3*a2^2 + 40*a1^3*a2 + 35*a1^3 + 10*a1^2*a2^3 + 60*a1^2*a2^2 + 105*a1^2*a2 ...
                + 50*a1^2 + 5*a1*a2^4 + 40*a1*a2^3 + 105*a1*a2^2 + 100*a1*a2 + 24*a1 + a2^5 + 10*a2^4 + 35*a2^3 + 50*a2^2 + 24*a2)*u.^5 ...
                + (- 5*a1^5 - 20*a1^4*a2 - 40*a1^4 - 30*a1^3*a2^2 - 130*a1^3*a2 - 115*a1^3 - 20*a1^2*a2^3 - 150*a1^2*a2^2 - 290*a1^2*a2 ...
                - 140*a1^2 - 5*a1*a2^4 - 70*a1*a2^3 - 235*a1*a2^2 - 250*a1*a2 - 60*a1 - 10*a2^4 - 60*a2^3 - 110*a2^2 - 60*a2)*u.^4 ...
                + (10*a1^5 + 30*a1^4*a2 + 60*a1^4 + 30*a1^3*a2^2 + 150*a1^3*a2 + 135*a1^3 + 10*a1^2*a2^3 + 120*a1^2*a2^2 ...
                + 275*a1^2*a2 + 135*a1^2 + 30*a1*a2^3 + 165*a1*a2^2 + 210*a1*a2 + 50*a1 + 25*a2^3 + 75*a2^2 + 50*a2)*u.^3 ...
                + (- 10*a1^5 - 20*a1^4*a2 - 40*a1^4 - 10*a1^3*a2^2 - 70*a1^3*a2 - 65*a1^3 - 30*a1^2*a2^2 ...
                - 100*a1^2*a2 - 50*a1^2 - 35*a1*a2^2 - 65*a1*a2 - 15*a1 - 15*a2^2 - 15*a2)*u.^2 ...
                + (a1 + a2 + 5*a1*a2 + 10*a1^2*a2 + 10*a1^3*a2 + 5*a1^4*a2 + 5*a1^2 + 10*a1^3 + 10*a1^4 + 5*a1^5)*u - a1^5;
        case 6
            Mn = (a1^6 + 6*a1^5*a2 + 15*a1^5 + 15*a1^4*a2^2 + 75*a1^4*a2 + 85*a1^4 + 20*a1^3*a2^3 + 150*a1^3*a2^2 + 340*a1^3*a2 ...
                + 225*a1^3 + 15*a1^2*a2^4 + 150*a1^2*a2^3 + 510*a1^2*a2^2 + 675*a1^2*a2 + 274*a1^2 + 6*a1*a2^5 + 75*a1*a2^4 ...
                + 340*a1*a2^3 + 675*a1*a2^2 + 548*a1*a2 + 120*a1 + a2^6 + 15*a2^5 + 85*a2^4 + 225*a2^3 + 274*a2^2 + 120*a2)*u.^6 ...
                + (- 6*a1^6 - 30*a1^5*a2 - 75*a1^5 - 60*a1^4*a2^2 - 315*a1^4*a2 - 360*a1^4 - 60*a1^3*a2^3 - 510*a1^3*a2^2 ...
                - 1230*a1^3*a2 - 825*a1^3 - 30*a1^2*a2^4 - 390*a1^2*a2^3 - 1530*a1^2*a2^2 - 2175*a1^2*a2 - 894*a1^2 - 6*a1*a2^5 ...
                - 135*a1*a2^4 - 810*a1*a2^3 - 1875*a1*a2^2 - 1644*a1*a2 - 360*a1 - 15*a2^5 - 150*a2^4 - 525*a2^3 - 750*a2^2 - 360*a2)*u.^5 ...
                + (15*a1^6 + 60*a1^5*a2 + 150*a1^5 + 90*a1^4*a2^2 + 510*a1^4*a2 + 590*a1^4 + 60*a1^3*a2^3 + 630*a1^3*a2^2 + 1670*a1^3*a2 ...
                + 1140*a1^3 + 15*a1^2*a2^4 + 330*a1^2*a2^3 + 1635*a1^2*a2^2 + 2580*a1^2*a2 + 1075*a1^2 + 60*a1*a2^4 + 620*a1*a2^3 ...
                + 1830*a1*a2^2 + 1790*a1*a2 + 390*a1 + 65*a2^4 + 390*a2^3 + 715*a2^2 + 390*a2)*u.^4 ...
                + (- 20*a1^6 - 60*a1^5*a2 - 150*a1^5 - 60*a1^4*a2^2 - 390*a1^4*a2 - 460*a1^4 - 20*a1^3*a2^3 - 330*a1^3*a2^2 ...
                - 1030*a1^3*a2 - 720*a1^3 - 90*a1^2*a2^3 - 720*a1^2*a2^2 - 1350*a1^2*a2 - 570*a1^2 - 150*a1*a2^3 - 720*a1*a2^2 ...
                - 840*a1*a2 - 180*a1 - 90*a2^3 - 270*a2^2 - 180*a2)*u.^3 ...
                + (15*a1^6 + 30*a1^5*a2 + 75*a1^5 + 15*a1^4*a2^2 + 135*a1^4*a2 + 165*a1^4 + 60*a1^3*a2^2 + 270*a1^3*a2 ...
                + 195*a1^3 + 105*a1^2*a2^2 + 285*a1^2*a2 + 121*a1^2 + 90*a1*a2^2 + 152*a1*a2 + 31*a1 + 31*a2^2 + 31*a2)*u.^2 ...
                + (- a1 - a2 - 6*a1*a2 - 15*a1^2*a2 - 20*a1^3*a2 - 15*a1^4*a2 - 6*a1^5*a2 - 6*a1^2 - 15*a1^3 - 20*a1^4 - 15*a1^5 - 6*a1^6)*u + a1^6;
        case 7
            Mn = (a1^7 + 7*a1^6*a2 + 21*a1^6 + 21*a1^5*a2^2 + 126*a1^5*a2 + 175*a1^5 + 35*a1^4*a2^3 + 315*a1^4*a2^2 + 875*a1^4*a2 + 735*a1^4 ...
                + 35*a1^3*a2^4 + 420*a1^3*a2^3 + 1750*a1^3*a2^2 + 2940*a1^3*a2 + 1624*a1^3 + 21*a1^2*a2^5 + 315*a1^2*a2^4 + 1750*a1^2*a2^3 ...
                + 4410*a1^2*a2^2 + 4872*a1^2*a2 + 1764*a1^2 + 7*a1*a2^6 + 126*a1*a2^5 + 875*a1*a2^4 + 2940*a1*a2^3 + 4872*a1*a2^2 ...
                + 3528*a1*a2 + 720*a1 + a2^7 + 21*a2^6 + 175*a2^5 + 735*a2^4 + 1624*a2^3 + 1764*a2^2 + 720*a2)*u.^7 ...
                + (- 7*a1^7 - 42*a1^6*a2 - 126*a1^6 - 105*a1^5*a2^2 - 651*a1^5*a2 - 910*a1^5 - 140*a1^4*a2^3 - 1365*a1^4*a2^2 - 3955*a1^4*a2 ...
                - 3360*a1^4 - 105*a1^3*a2^4 - 1470*a1^3*a2^3 - 6720*a1^3*a2^2 - 11865*a1^3*a2 - 6643*a1^3 - 42*a1^2*a2^5 - 840*a1^2*a2^4 ...
                - 5530*a1^2*a2^3 - 15435*a1^2*a2^2 - 18011*a1^2*a2 - 6594*a1^2 - 7*a1*a2^6 - 231*a1*a2^5 - 2170*a1*a2^4 - 8715*a1*a2^3 ...
                - 16093*a1*a2^2 - 12348*a1*a2 - 2520*a1 - 21*a2^6 - 315*a2^5 - 1785*a2^4 - 4725*a2^3 - 5754*a2^2 - 2520*a2)*u.^6 ...
                + (21*a1^7 + 105*a1^6*a2 + 315*a1^6 + 210*a1^5*a2^2 + 1365*a1^5*a2 + 1925*a1^5 + 210*a1^4*a2^3 + 2310*a1^4*a2^2 ...
                + 7105*a1^4*a2 + 6125*a1^4 + 105*a1^3*a2^4 + 1890*a1^3*a2^3 + 9905*a1^3*a2^2 + 18725*a1^3*a2 + 10654*a1^3 + 21*a1^2*a2^5 ...
                + 735*a1^2*a2^4 + 6335*a1^2*a2^3 + 20475*a1^2*a2^2 + 25704*a1^2*a2 + 9520*a1^2 + 105*a1*a2^5 + 1750*a1*a2^4 + 9275*a1*a2^3 ...
                + 19950*a1*a2^2 + 16520*a1*a2 + 3360*a1 + 140*a2^5 + 1400*a2^4 + 4900*a2^3 + 7000*a2^2 + 3360*a2)*u.^5 ...
                + (- 35*a1^7 - 140*a1^6*a2 - 420*a1^6 - 210*a1^5*a2^2 - 1470*a1^5*a2 - 2100*a1^5 - 140*a1^4*a2^3 - 1890*a1^4*a2^2 ...
                - 6370*a1^4*a2 - 5600*a1^4 - 35*a1^3*a2^4 - 1050*a1^3*a2^3 - 6895*a1^3*a2^2 - 14420*a1^3*a2 - 8365*a1^3 - 210*a1^2*a2^4 ...
                - 3080*a1^2*a2^3 - 12600*a1^2*a2^2 - 17570*a1^2*a2 - 6580*a1^2 - 455*a1*a2^4 - 4130*a1*a2^3 - 11305*a1*a2^2 - 10430*a1*a2 ...
                - 2100*a1 - 350*a2^4 - 2100*a2^3 - 3850*a2^2 - 2100*a2)*u.^4 ...
                + (35*a1^7 + 105*a1^6*a2 + 315*a1^6 + 105*a1^5*a2^2 + 840*a1^5*a2 + 1225*a1^5 + 35*a1^4*a2^3 + 735*a1^4*a2^2 + 2905*a1^4*a2 ...
                + 2625*a1^4 + 210*a1^3*a2^3 + 2205*a1^3*a2^2 + 5460*a1^3*a2 + 3241*a1^3 + 525*a1^2*a2^3 + 3465*a1^2*a2^2 + 5733*a1^2*a2 ...
                + 2163*a1^2 + 630*a1*a2^3 + 2793*a1*a2^2 + 3066*a1*a2 + 602*a1 + 301*a2^3 + 903*a2^2 + 602*a2)*u.^3 ...
                + (- 21*a1^7 - 42*a1^6*a2 - 126*a1^6 - 21*a1^5*a2^2 - 231*a1^5*a2 - 350*a1^5 - 105*a1^4*a2^2 - 595*a1^4*a2 - 560*a1^4 ...
                - 245*a1^3*a2^2 - 875*a1^3*a2 - 532*a1^3 - 315*a1^2*a2^2 - 749*a1^2*a2 - 280*a1^2 - 217*a1*a2^2 - 343*a1*a2 - 63*a1 - 63*a2^2 - 63*a2)*u.^2 ...
                + (a1 + a2 + 7*a1*a2 + 21*a1^2*a2 + 35*a1^3*a2 + 35*a1^4*a2 + 21*a1^5*a2 + 7*a1^6*a2 + 7*a1^2 + 21*a1^3 + 35*a1^4 + 35*a1^5 + 21*a1^6 + 7*a1^7)*u - a1^7;
 
        case 8
            Mn = (a1^8 + 8*a1^7*a2 + 28*a1^7 + 28*a1^6*a2^2 + 196*a1^6*a2 + 322*a1^6 + 56*a1^5*a2^3 + 588*a1^5*a2^2 + 1932*a1^5*a2 + 1960*a1^5 + 70*a1^4*a2^4 ...
                + 980*a1^4*a2^3 + 4830*a1^4*a2^2 + 9800*a1^4*a2 + 6769*a1^4 + 56*a1^3*a2^5 + 980*a1^3*a2^4 + 6440*a1^3*a2^3 + 19600*a1^3*a2^2 + 27076*a1^3*a2 ...
                + 13132*a1^3 + 28*a1^2*a2^6 + 588*a1^2*a2^5 + 4830*a1^2*a2^4 + 19600*a1^2*a2^3 + 40614*a1^2*a2^2 + 39396*a1^2*a2 + 13068*a1^2 + 8*a1*a2^7 ...
                + 196*a1*a2^6 + 1932*a1*a2^5 + 9800*a1*a2^4 + 27076*a1*a2^3 + 39396*a1*a2^2 + 26136*a1*a2 + 5040*a1 + a2^8 + 28*a2^7 + 322*a2^6 + 1960*a2^5 ...
                + 6769*a2^4 + 13132*a2^3 + 13068*a2^2 + 5040*a2)*u.^8 ...
                + (- 8*a1^8 - 56*a1^7*a2 - 196*a1^7 - 168*a1^6*a2^2 - 1204*a1^6*a2 - 1988*a1^6 - 280*a1^5*a2^3 - 3108*a1^5*a2^2 - 10528*a1^5*a2 - 10780*a1^5 ...
                - 280*a1^4*a2^4 - 4340*a1^4*a2^3 - 22820*a1^4*a2^2 - 48020*a1^4*a2 - 33572*a1^4 - 168*a1^3*a2^5 - 3500*a1^3*a2^4 - 25760*a1^3*a2^3 ...
                - 84280*a1^3*a2^2 - 121296*a1^3*a2 - 59584*a1^3 - 56*a1^2*a2^6 - 1596*a1^2*a2^5 - 15820*a1^2*a2^4 - 72520*a1^2*a2^3 - 162456*a1^2*a2^2 ...
                - 164640*a1^2*a2 - 55152*a1^2 - 8*a1*a2^7 - 364*a1*a2^6 - 4928*a1*a2^5 - 30380*a1*a2^4 - 95312*a1*a2^3 - 150528*a1*a2^2 - 104544*a1*a2 ...
                - 20160*a1 - 28*a2^7 - 588*a2^6 - 4900*a2^5 - 20580*a2^4 - 45472*a2^3 - 49392*a2^2 - 20160*a2)*u.^7 ...
                + (28*a1^8 + 168*a1^7*a2 + 588*a1^7 + 420*a1^6*a2^2 + 3108*a1^6*a2 + 5166*a1^6 + 560*a1^5*a2^3 + 6720*a1^5*a2^2 + 23716*a1^5*a2 + 24570*a1^5 ...
                + 420*a1^4*a2^4 + 7560*a1^4*a2^3 + 43470*a1^4*a2^2 + 95970*a1^4*a2 + 68082*a1^4 + 168*a1^3*a2^5 + 4620*a1^3*a2^4 + 40040*a1^3*a2^3 ...
                + 144480*a1^3*a2^2 + 219184*a1^3*a2 + 109242*a1^3 + 28*a1^2*a2^6 + 1428*a1^2*a2^5 + 18970*a1^2*a2^4 + 103320*a1^2*a2^3 + 256732*a1^2*a2^2 ...
                + 274974*a1^2*a2 + 93044*a1^2 + 168*a1*a2^6 + 4116*a1*a2^5 + 34230*a1*a2^4 + 128240*a1*a2^3 + 225582*a1*a2^2 + 165928*a1*a2 + 31920*a1 ...
                + 266*a2^6 + 3990*a2^5 + 22610*a2^4 + 59850*a2^3 + 72884*a2^2 + 31920*a2)*u.^6 ...
                + (- 56*a1^8 - 280*a1^7*a2 - 980*a1^7 - 560*a1^6*a2^2 - 4340*a1^6*a2 - 7280*a1^6 - 560*a1^5*a2^3 - 7560*a1^5*a2^2 - 28280*a1^5*a2 - 29750*a1^5 ...
                - 280*a1^4*a2^4 - 6440*a1^4*a2^3 - 42280*a1^4*a2^2 - 99750*a1^4*a2 - 72044*a1^4 - 56*a1^3*a2^5 - 2660*a1^3*a2^4 - 29960*a1^3*a2^3 - 124600*a1^3*a2^2 ...
                - 202944*a1^3*a2 - 102830*a1^3 - 420*a1^2*a2^5 - 9800*a1^2*a2^4 - 70000*a1^2*a2^3 - 201600*a1^2*a2^2 - 232330*a1^2*a2 - 79380*a1^2 - 1120*a1*a2^5 ...
                - 16450*a1*a2^4 - 81200*a1*a2^3 - 166250*a1*a2^2 - 131880*a1*a2 - 25200*a1 - 1050*a2^5 - 10500*a2^4 - 36750*a2^3 - 52500*a2^2 - 25200*a2)*u.^5 ...
                + (70*a1^8 + 280*a1^7*a2 + 980*a1^7 + 420*a1^6*a2^2 + 3500*a1^6*a2 + 5950*a1^6 + 280*a1^5*a2^3 + 4620*a1^5*a2^2 + 18900*a1^5*a2 + 20300*a1^5 ...
                + 70*a1^4*a2^4 + 2660*a1^4*a2^3 + 21770*a1^4*a2^2 + 56700*a1^4*a2 + 41881*a1^4 + 560*a1^3*a2^4 + 10640*a1^3*a2^3 + 55720*a1^3*a2^2 + 100604*a1^3*a2 ...
                + 51926*a1^3 + 1820*a1^2*a2^4 + 22120*a1^2*a2^3 + 80626*a1^2*a2^2 + 103138*a1^2*a2 + 35511*a1^2 + 2800*a1*a2^4 + 23604*a1*a2^3 + 61418*a1*a2^2 ...
                + 54222*a1*a2 + 10206*a1 + 1701*a2^4 + 10206*a2^3 + 18711*a2^2 + 10206*a2)*u.^4 ...
                + (- 56*a1^8 - 168*a1^7*a2 - 588*a1^7 - 168*a1^6*a2^2 - 1596*a1^6*a2 - 2772*a1^6 - 56*a1^5*a2^3 - 1428*a1^5*a2^2 - 6832*a1^5*a2 - 7560*a1^5 ...
                - 420*a1^4*a2^3 - 5460*a1^4*a2^2 - 16800*a1^4*a2 - 12768*a1^4 - 1400*a1^3*a2^3 - 11760*a1^3*a2^2 - 25144*a1^3*a2 - 13230*a1^3 - 2520*a1^2*a2^3 ...
                - 14784*a1^2*a2^2 - 22386*a1^2*a2 - 7714*a1^2 - 2408*a1*a2^3 - 10122*a1*a2^2 - 10612*a1*a2 - 1932*a1 - 966*a2^3 - 2898*a2^2 - 1932*a2)*u.^3 ...
                + (28*a1^8 + 56*a1^7*a2 + 196*a1^7 + 28*a1^6*a2^2 + 364*a1^6*a2 + 658*a1^6 + 168*a1^5*a2^2 + 1148*a1^5*a2 + 1330*a1^5 + 490*a1^4*a2^2 ...
                + 2170*a1^4*a2 + 1708*a1^4 + 840*a1^3*a2^2 + 2576*a1^3*a2 + 1372*a1^3 + 868*a1^2*a2^2 + 1876*a1^2*a2 + 631*a1^2 + 504*a1*a2^2 + 758*a1*a2 ...
                + 127*a1 + 127*a2^2 + 127*a2)*u.^2 ...
                + (- a1 - a2 - 8*a1*a2 - 28*a1^2*a2 - 56*a1^3*a2 - 70*a1^4*a2 - 56*a1^5*a2 - 28*a1^6*a2 - 8*a1^7*a2 - 8*a1^2 - 28*a1^3 - 56*a1^4 - 70*a1^5 ...
                - 56*a1^6 - 28*a1^7 - 8*a1^8)*u + a1^8;
        otherwise
            disp 'ERROR: N must take an integer value in {0,...,8}'
    end
end